@using GymTrack.ViewModels
@model TrainingViewModel

@{
    ViewBag.Title = "Add Training";
}

<div class="secondheader">
    <h3> Training for @Model.Date.ToShortDateString()</h3>
</div>




<div id="trainingContainer">
    <form id="exerciseForm" method="post" action="/Training/Create">
@*             @Html.Label("Date") *@
            <input type="hidden" name="date" value="@Model.Date.ToString("yyyy-MM-dd")" />

            @Html.Label("Category")
            <select id="categorySelect" onchange="updateExerciseOptions()">
                <option value=""> - - - select - - - </option>
                <option value="Push">Push</option>
                <option value="Pull">Pull</option>
                <option value="Legs">Legs</option>
            </select>

            @Html.Label("Exercise")
            <select id="exerciseSelect">
                <option value=""> - - - select - - - </option>
            </select>

            @Html.Label("Weight")
            <input type="number" id="weightInput" step="2.5"  />

            @Html.Label("Repetitions")
            <input type="number" id="repsInput"/>
@* 
            @Html.Label("Series")
            <input type="number" id="setsInput" />
 *@
            <button type="button" onclick="addExercise()">Add Exercise</button>

            <button type="submit">Save Training</button>
        </form>

        <div id="exerciseList">
        @for (int i=0; i < Model.Exercises.Count; i++)
        {
            var ex = Model.Exercises[i];
            <div class="exerciseList" data-exercise-index="@i">
                <span>@ex.Name - @ex.Weight kg x @ex.Reps powtorzen@*  x @ex.Sets serii *@</span>
                <button type="button" style="margin-left:10px" onclick="removeExercise(@i)">Delete</button>
                
                <input type="hidden" name="Exercises[@i].Name" value="@ex.Name" data-owner="@i"/>
                <input type="hidden" name="Exercises[@i].Category" value="@ex.Category" data-owner="@i" />
                <input type="hidden" name="Exercises[@i].Weight" value="@ex.Weight" data-owner="@i" />
                <input type="hidden" name="Exercises[@i].Reps" value="@ex.Reps" data-owner="@i" />@* 
                <input type="hidden" name="Exercises[@i].Sets" value="@ex.Sets" data-owner="@i" /> *@

            </div>
        }
        </div>


</div>


<script>

    const exercises = {
        "Push": ["Benchpress", "Shoulderpress", "Incline"],
        "Pull": ["Pullups", "SeaatedRow", "Biceps"],
        "Legs": ["Legpress", "Quads", "Calves"]
    };

    let exerciseIndex = 0;

    if (@Model.Exercises.Count > 0) {
        exerciseIndex = @Model.Exercises.Count;
    }

    function removeExercise(exerciseIndex) {
        document.querySelectorAll(`input[data-owner="${exerciseIndex}"]`).forEach(input => input.remove());
        const container = document.querySelector(`[data-exercise-index="${exerciseIndex}"]`);
        if (container) container.remove();
    }
    function updateExerciseOptions()
    {
        const category = document.getElementById("categorySelect").value;
        const exerciseSelect = document.getElementById("exerciseSelect");

        exerciseSelect.innerHTML = '<option value=""> - - - select - - - </option>';

        if(exercises[category]){
            exercises[category].forEach(name => {
                const option = document.createElement("option");
                option.value = name;
                option.text = name;
                exerciseSelect.appendChild(option);
            });

        }
    }

    function addExercise() 
    {
        const name = document.getElementById("exerciseSelect").value;
        const category = document.getElementById("categorySelect").value;
        const weight = document.getElementById("weightInput").value;
        const reps = document.getElementById("repsInput").value;
        // const sets = document.getElementById("setsInput").value;

        if(!name || !weight || !reps /* || !sets */)
        {
            alert("Uzupelnij wszystkie pola");
            return;
        }
    
        const container = document.createElement("div");
        container.classList.add("exerciseList");
        container.dataset.exerciseIndex = exerciseIndex;    

        const text = document.createElement("span");
        text.innerText = `${name} - ${weight} kg x ${reps} powtorzen `;
        container.appendChild(text);

        const removeButton = document.createElement("button");
        removeButton.innerText = `Delete`;
        removeButton.style.marginLeft = "10px";
        removeButton.onclick = function() {
            document.querySelectorAll(`input[data-owner="${exerciseIndex}"`).forEach(input => input.remove());
            container.remove();
        }
    
        container.appendChild(removeButton);

        document.getElementById("exerciseList").appendChild(container);

        const fields = [
            { name: `Exercises[${exerciseIndex}].Name`, value: name },
            { name: `Exercises[${exerciseIndex}].Category`, value: category},
            { name: `Exercises[${exerciseIndex}].Weight`, value: weight },
            { name: `Exercises[${exerciseIndex}].Reps`, value: reps },
            // { name: `Exercises[${exerciseIndex}].Sets`, value: sets } 
        ];

        fields.forEach(field =>{
            const input = document.createElement("input");
            input.type = "hidden";
            input.name = field.name;
            input.value = field.value;
            input.setAttribute("data-owner", exerciseIndex);
            document.getElementById("exerciseForm").appendChild(input);
        });

        exerciseIndex++;
    }
</script>