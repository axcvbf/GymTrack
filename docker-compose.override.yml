services:
  app:
    build: .
    container_name: gymtrack-app
    depends_on:
      - db
    ports:
      - "5000:8080"

    environment:
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - ASPNETCORE_ENVIRONMENT=Docker
      - ConnectionStrings__GymDbContextConnection=Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    networks:
      - gymtrack-net

  db:
    image: postgres:15
    container_name: gymtrack-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gymtrack-net

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: npm
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    networks:
      - gymtrack-net

volumes:
  postgres_data:
  npm_data:
  npm_letsencrypt:

networks:
  gymtrack-net:
